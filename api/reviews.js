import { createClient } from '@supabase/supabase-js'
const supabase=createClient(process.env.SUPABASE_URL,process.env.SUPABASE_SERVICE_ROLE)
export default async function handler(req,res){res.setHeader('Access-Control-Allow-Origin','*');res.setHeader('Access-Control-Allow-Methods','GET,POST,DELETE,PATCH,OPTIONS');res.setHeader('Access-Control-Allow-Headers','Content-Type,x-admin-key');if(req.method==='OPTIONS')return res.status(200).end();try{if(req.method==='GET'){const {data,error}=await supabase.from('reviews').select('id,name,stars,text,created_at,approved').order('created_at',{ascending:false}).limit(50);if(error)throw error;const admin=(req.headers['x-admin-key']||'')===(process.env.ADMIN_KEY||'123123');return res.status(200).json(admin?data:(data||[]).filter(x=>x.approved))}if(req.method==='POST'){const b=req.body||{};const {error}=await supabase.from('reviews').insert({name:(b.name||'').slice(0,40),stars:Math.max(1,Math.min(5,+b.stars||5)),text:(b.text||'').slice(0,600),approved:false});if(error)throw error;return res.status(200).json({ok:true})}if(req.method==='DELETE'){const key=req.headers['x-admin-key']||'';if(key!==(process.env.ADMIN_KEY||'123123'))return res.status(403).json({error:'forbidden'});const id=+req.query.id;const {error}=await supabase.from('reviews').delete().eq('id',id);if(error)throw error;return res.status(200).json({ok:true})}if(req.method==='PATCH'){const key=req.headers['x-admin-key']||'';if(key!==(process.env.ADMIN_KEY||'123123'))return res.status(403).json({error:'forbidden'});const {id,approved}=req.body||{};const {error}=await supabase.from('reviews').update({approved:!!approved}).eq('id',id);if(error)throw error;return res.status(200).json({ok:true})}res.status(405).json({error:'method not allowed'})}catch(e){console.error(e);res.status(500).json({error:'server error'})}}
